pipeline {
    agent any

    tools {
        maven 'Maven'
        jdk 'JAVA_HOME'
    }
    
	parameters {
        string(name: 'Branch_Name', defaultValue: 'working_v1.0', description: 'Git Branch to be built')
    }
    
    environment {
           SONARQUBE_ENV = 'LocalSonar'
           SUREFIRE_REPORT = "target/surefire-reports/*"
           EXTENT_REPORT = "target/ExtentReport_*.html"
           
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${params.Branch_Name}",
                    url: 'https://github.com/venkiralami/mmp_selenium_ven.git'
            }
        }

        stage('Build & Test') {
            steps {
               sh 'mvn clean test'
            }
        }
        
        stage('Archive Reports') {
            steps {
                script {
                    // Archive so they are accessible in Jenkins
                    archiveArtifacts artifacts: "${SUREFIRE_REPORT}, ${EXTENT_REPORT}", fingerprint: true
                }
            }
        }

        stage('Parse Extent Report') {
            steps {
                script {
                    // Use pure Groovy (no @Grab) to parse counts
                    def extentFile = new File("${WORKSPACE}/${EXTENT_REPORT}")
                    def passedCount = "0"
                    def failedCount = "0"
                    def skippedCount = "0"

                    if (extentFile.exists()) {
                        def content = extentFile.text

                        // Regex based on Extent HTML patterns
                        def passMatch = content =~ /Pass<\/.*?>(\d+)/
                        def failMatch = content =~ /Fail<\/.*?>(\d+)/
                        def skipMatch = content =~ /Skip<\/.*?>(\d+)/

                        passedCount  = passMatch ? passMatch[0][1] : "0"
                        failedCount  = failMatch ? failMatch[0][1] : "0"
                        skippedCount = skipMatch ? skipMatch[0][1] : "0"
                    }

                    // Save counts to environment vars for email
                    env.PASSED_COUNT  = passedCount
                    env.FAILED_COUNT  = failedCount
                    env.SKIPPED_COUNT = skippedCount
                }
            }
        }
                
        
stage('Send Email') {
        steps {
            script {
                emailext(
                    subject: "Test Execution Report - ${currentBuild.fullDisplayName}",
                    body: """
                        <h3>Automation Test Summary</h3>
                        <table border="1" cellpadding="5">
                            <tr><th>Passed</th><th>Failed</th><th>Skipped</th></tr>
                            <tr>
                                <td style="color:green">${env.PASSED_COUNT}</td>
                                <td style="color:red">${env.FAILED_COUNT}</td>
                                <td style="color:orange">${env.SKIPPED_COUNT}</td>
                            </tr>
                        </table>
                        <br>
                        <b>Extent Report:</b> <a href="${BUILD_URL}artifact/${EXTENT_REPORT}">View Report</a><br>
                        <b>Surefire Report:</b> <a href="${BUILD_URL}artifact/${SUREFIRE_REPORT}">View Report</a>
                        <br><br>
                        <i>Generated by Jenkins on ${new Date()}</i>
                    """,
                    to: 'venki.ralami@gmail.com',
                    mimeType: "text/html",                    
                    attachmentsPattern: EXTENT_REPORT
                )
            }
        }
    }
    stage('Publish HTML Report') {
    steps {
        script {
            publishHTML([
                reportDir: 'target/surefire-reports',
                reportFiles: 'index.html',
                reportName: 'Surefire Report',
                keepAll: true,
                allowMissing: false,
                alwaysLinkToLastBuild: true
            ])
        }
    }
}
    
stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
					
                    sh '''
                       mvn jacoco:report sonar:sonar \
   						 -Dsonar.projectKey=mmp_selenium_ven \
   						 -Dsonar.host.url=http://localhost:9000 \
   						 -Dsonar.login=sqa_e9f060a5bab7ae0dae124a41ee67171135152253 \
  					 	 -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
                    '''
                    
                }
            }
        }
}
        
    
post {
        always {
            script {
                // Paths to reports
                def surefireReport = "target/surefire-reports/index.html"
                def extentReport = "target/ExtentReport_*.html"

                // Archive reports so they can be accessed via Jenkins
                archiveArtifacts artifacts: "${surefireReport}, ${extentReport}", fingerprint: true

                // Read Extent report content to extract counts
                def passedCount = 0
                def failedCount = 0
                if (extentReport.exists()) {
                        def content = extentReport.text

                        // Regex based on Extent HTML patterns
                        def passMatch = content =~ /Pass<\/.*?>(\d+)/
                        def failMatch = content =~ /Fail<\/.*?>(\d+)/
                        def skipMatch = content =~ /Skip<\/.*?>(\d+)/

                        passedCount  = passMatch ? passMatch[0][1] : "0"
                        failedCount  = failMatch ? failMatch[0][1] : "0"
                        skippedCount = skipMatch ? skipMatch[0][1] : "0"
                    }
                

                // Build HTML body for email
                def emailBody = """
                    <h2>Automation Test Execution Report</h2>
                    <p><b>Job:</b> ${env.JOB_NAME}</p>
                    <p><b>Build Number:</b> ${env.BUILD_NUMBER}</p>
                    <p><b>Passed:</b> ${passedCount}</p>
                    <p><b>Failed:</b> ${failedCount}</p>
                    <p><a href="${env.BUILD_URL}artifact/${surefireReport}">Surefire HTML Report</a></p>
                    <p><a href="${env.BUILD_URL}artifact/${extentReport}">Extent HTML Report</a></p>
                """

                // Send email
                emailext(
                    subject: "Test Execution Report - ${currentBuild.currentResult} - Build #${BUILD_NUMBER}",
                    body: emailBody,
                    mimeType: 'text/html',
                    to: 'venki.ralami@gmail.com',
                    attachmentsPattern: extentReport
                )
            }
        }
    }
    
    }
